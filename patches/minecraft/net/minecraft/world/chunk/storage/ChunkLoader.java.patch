--- a/net/minecraft/world/chunk/storage/ChunkLoader.java
+++ b/net/minecraft/world/chunk/storage/ChunkLoader.java
@@ -1,75 +_,95 @@
 package net.minecraft.world.chunk.storage;
 
 import com.mojang.datafixers.DataFixer;
+
 import java.io.File;
 import java.io.IOException;
 import java.util.function.Supplier;
 import javax.annotation.Nullable;
+
 import net.minecraft.nbt.CompoundNBT;
 import net.minecraft.nbt.NBTUtil;
 import net.minecraft.util.RegistryKey;
 import net.minecraft.util.SharedConstants;
 import net.minecraft.util.datafix.DefaultTypeReferences;
 import net.minecraft.util.math.ChunkPos;
+import net.minecraft.world.DimensionType;
+import net.minecraft.world.IWorld;
 import net.minecraft.world.World;
+import net.minecraft.world.chunk.ChunkStatus;
 import net.minecraft.world.gen.feature.structure.LegacyStructureDataUtil;
+import net.minecraft.world.server.ServerChunkProvider;
+import net.minecraft.world.server.ServerWorld;
 import net.minecraft.world.storage.DimensionSavedDataManager;
 
 public class ChunkLoader implements AutoCloseable {
-   private final IOWorker field_227077_a_;
-   protected final DataFixer field_219168_b;
-   @Nullable
-   private LegacyStructureDataUtil field_219167_a;
-
-   public ChunkLoader(File p_i231889_1_, DataFixer p_i231889_2_, boolean p_i231889_3_) {
-      this.field_219168_b = p_i231889_2_;
-      this.field_227077_a_ = new IOWorker(p_i231889_1_, p_i231889_3_, "chunk");
-   }
-
-   public CompoundNBT func_235968_a_(RegistryKey<World> p_235968_1_, Supplier<DimensionSavedDataManager> p_235968_2_, CompoundNBT p_235968_3_) {
-      int i = func_219165_a(p_235968_3_);
-      int j = 1493;
-      if (i < 1493) {
-         p_235968_3_ = NBTUtil.func_210821_a(this.field_219168_b, DefaultTypeReferences.CHUNK, p_235968_3_, i, 1493);
-         if (p_235968_3_.func_74775_l("Level").func_74767_n("hasLegacyStructureData")) {
-            if (this.field_219167_a == null) {
-               this.field_219167_a = LegacyStructureDataUtil.func_236992_a_(p_235968_1_, p_235968_2_.get());
+    // Paper - nuke IO worker
+    protected final DataFixer field_219168_b;
+    @Nullable
+    // Paper start - async chunk loading
+    private volatile LegacyStructureDataUtil field_219167_a;
+    private final Object persistentDataLock = new Object(); // Paper
+    public final RegionFileCache regionFileCache;
+    // Paper end - async chunk loading
+
+    public ChunkLoader(File p_i231889_1_, DataFixer p_i231889_2_, boolean p_i231889_3_) {
+        this.field_219168_b = p_i231889_2_;
+        // Paper start - async chunk io
+        // remove IO worker
+        this.regionFileCache = new RegionFileCache(p_i231889_1_, p_i231889_3_); // Paper - nuke IOWorker
+        // Paper end - async chunk io
+    }
+
+    public CompoundNBT func_235968_a_(RegistryKey<World> p_235968_1_, Supplier<DimensionSavedDataManager> p_235968_2_, CompoundNBT p_235968_3_) {
+        int i = func_219165_a(p_235968_3_);
+        int j = 1493;
+        if (i < 1493) {
+            p_235968_3_ = NBTUtil.func_210821_a(this.field_219168_b, DefaultTypeReferences.CHUNK, p_235968_3_, i, 1493);
+            if (p_235968_3_.func_74775_l("Level").func_74767_n("hasLegacyStructureData")) {
+                synchronized (this.persistentDataLock) {
+                    if (this.field_219167_a == null) {
+                        this.field_219167_a = LegacyStructureDataUtil.func_236992_a_(p_235968_1_, p_235968_2_.get());
+                    }
+
+                    p_235968_3_ = this.field_219167_a.func_212181_a(p_235968_3_);
+                }
             }
-
-            p_235968_3_ = this.field_219167_a.func_212181_a(p_235968_3_);
-         }
-      }
-
-      p_235968_3_ = NBTUtil.func_210822_a(this.field_219168_b, DefaultTypeReferences.CHUNK, p_235968_3_, Math.max(1493, i));
-      if (i < SharedConstants.func_215069_a().getWorldVersion()) {
-         p_235968_3_.func_74768_a("DataVersion", SharedConstants.func_215069_a().getWorldVersion());
-      }
-
-      return p_235968_3_;
-   }
-
-   public static int func_219165_a(CompoundNBT p_219165_0_) {
-      return p_219165_0_.func_150297_b("DataVersion", 99) ? p_219165_0_.func_74762_e("DataVersion") : -1;
-   }
-
-   @Nullable
-   public CompoundNBT func_227078_e_(ChunkPos p_227078_1_) throws IOException {
-      return this.field_227077_a_.func_227090_a_(p_227078_1_);
-   }
-
-   public void func_219100_a(ChunkPos p_219100_1_, CompoundNBT p_219100_2_) {
-      this.field_227077_a_.func_227093_a_(p_219100_1_, p_219100_2_);
-      if (this.field_219167_a != null) {
-         this.field_219167_a.func_208216_a(p_219100_1_.func_201841_a());
-      }
-
-   }
-
-   public void func_227079_i_() {
-      this.field_227077_a_.func_227088_a_().join();
-   }
-
-   public void close() throws IOException {
-      this.field_227077_a_.close();
-   }
+        }
+
+        p_235968_3_ = NBTUtil.func_210822_a(this.field_219168_b, DefaultTypeReferences.CHUNK, p_235968_3_, Math.max(1493, i));
+        if (i < SharedConstants.func_215069_a().getWorldVersion()) {
+            p_235968_3_.func_74768_a("DataVersion", SharedConstants.func_215069_a().getWorldVersion());
+        }
+
+        return p_235968_3_;
+    }
+
+    public static int func_219165_a(CompoundNBT p_219165_0_) {
+        return p_219165_0_.func_150297_b("DataVersion", 99) ? p_219165_0_.func_74762_e("DataVersion") : -1;
+    }
+
+    @Nullable
+    public CompoundNBT func_227078_e_(ChunkPos p_227078_1_) throws IOException {
+        return this.regionFileCache.func_219099_e(p_227078_1_); // Paper - async chunk io
+    }
+
+    // Paper start - async chunk io
+    public void func_219100_a(ChunkPos p_219100_1_, CompoundNBT p_219100_2_) throws IOException {
+        this.regionFileCache.func_219100_a(p_219100_1_, p_219100_2_);
+        // Paper end - Async chunk loading
+        if (this.field_219167_a != null) {
+            synchronized (this.persistentDataLock) { // Paper - Async chunk loading
+                this.field_219167_a.func_208216_a(p_219100_1_.func_201841_a());
+            } // Paper - Async chunk loading
+
+        }
+    }
+
+    public void func_227079_i_() {
+        com.destroystokyo.paper.io.PaperFileIOThread.Holder.INSTANCE.flush(); // Paper - nuke IO worker
+    }
+
+    public void close() throws IOException {
+        this.regionFileCache.close(); // Paper - nuke IO worker
+    }
 }
